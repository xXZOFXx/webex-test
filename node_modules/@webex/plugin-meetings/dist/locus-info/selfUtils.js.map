{"version":3,"sources":["selfUtils.js"],"names":["SelfUtils","parse","self","deviceId","muted","getMuted","lastModified","getLastModified","modifiedBy","getModifiedBy","guest","moderator","mediaStatus","getStatus","status","state","joinedWith","devices","find","device","url","creator","isCreator","selfId","id","selfIdentity","getSelfIdentity","selfUrl","removed","getSelves","oldSelf","newSelf","previous","current","updates","isUnadmittedGuest","isAdmittedGuest","isMutedByOthers","mutedByOthers","moderatorChanged","isMediaInactiveOrReleased","wasMediaInactiveOrReleased","controls","audio","meta","person","audioStatus","video","videoStatus","slides","videoSlidesStatus","changedSelf","_JOINED_","_LEFT_","reason","MEETING_END_REASON","INACTIVE","MEDIA_RELEASED","isLocusGuestUnadmitted","check","_IDLE_","isLocusGuestAdmitted","ParameterError","getSipUrl","partner","type","sipUri","_CALL_","sipUrl","emailAddress","email"],"mappings":"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","file":"selfUtils.js","sourcesContent":["\nimport {\n  _IDLE_,\n  _JOINED_,\n  _CALL_,\n  _LEFT_,\n  MEETING_END_REASON\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\n\nconst SelfUtils = {};\n\n/**\n * parses the relevant values for self: muted, guest, moderator, mediaStatus, state, joinedWith, creator, id\n * @param {Object} self\n * @param {String} deviceId\n * @returns {undefined}\n */\nSelfUtils.parse = (self, deviceId) => {\n  if (self) {\n    return {\n      muted: SelfUtils.getMuted(self),\n      lastModified: SelfUtils.getLastModified(self),\n      modifiedBy: SelfUtils.getModifiedBy(self),\n      guest: self.guest,\n      moderator: self.moderator,\n      mediaStatus: SelfUtils.getStatus(self.status),\n      state: self.state,\n      // TODO: give a proper name . With same device as login or different login`\n      // Some times we might have joined with both mobile and web\n      joinedWith: self.devices.find((device) => deviceId === device.url),\n      creator: self.isCreator, // check if its used,\n      selfId: self.id,\n      selfIdentity: SelfUtils.getSelfIdentity(self),\n      selfUrl: self.url,\n      removed: self.removed\n    };\n  }\n\n  return null;\n};\n\nSelfUtils.getSelves = (oldSelf, newSelf, deviceId) => {\n  const previous = oldSelf && SelfUtils.parse(oldSelf, deviceId);\n  const current = newSelf && SelfUtils.parse(newSelf, deviceId);\n  const updates = {};\n\n  updates.isUnadmittedGuest = SelfUtils.isUnadmittedGuest(current);\n  updates.isAdmittedGuest = SelfUtils.isAdmittedGuest(previous, current);\n  updates.isMutedByOthers = SelfUtils.mutedByOthers(previous, current);\n  updates.moderatorChanged = SelfUtils.moderatorChanged(previous, current);\n  updates.isMediaInactiveOrReleased = SelfUtils.wasMediaInactiveOrReleased(previous, current);\n\n  return {\n    previous,\n    current,\n    updates\n  };\n};\n\nSelfUtils.getLastModified = (self) => {\n  if (!self || !self.controls || !self.controls.audio || !self.controls.audio.meta || !self.controls.audio.meta.lastModified) {\n    return null;\n  }\n\n  return self.controls.audio.meta.lastModified;\n};\n\nSelfUtils.getModifiedBy = (self) => {\n  if (!self || !self.controls || !self.controls.audio || !self.controls.audio.meta || !self.controls.audio.meta.modifiedBy) {\n    return null;\n  }\n\n  return self.controls.audio.meta.modifiedBy;\n};\n\n/**\n * get the id from the self object\n * @param {Object} self\n * @returns {String}\n */\nSelfUtils.getSelfIdentity = (self) => {\n  if (!self && !self.person) {\n    return null;\n  }\n\n  return self.person.id;\n};\n\n/**\n * get the muted property from the self object\n * @param {Object} self\n * @returns {Boolean}\n */\nSelfUtils.getMuted = (self) => {\n  if (!self || !self.controls || !self.controls.audio) {\n    return null;\n  }\n\n  return self.controls.audio.muted;\n};\n\nSelfUtils.getStatus = (status) => ({\n  audio: status.audioStatus,\n  video: status.videoStatus,\n  slides: status.videoSlidesStatus\n});\n\n\n/**\n * @param {Object} oldSelf\n * @param {Object} changedSelf\n * @returns {Boolean}\n */\nSelfUtils.wasMediaInactiveOrReleased = (oldSelf = {}, changedSelf) => oldSelf.joinedWith && oldSelf.joinedWith.state === _JOINED_ && changedSelf.joinedWith.state === _LEFT_ &&\n (changedSelf.joinedWith.reason === MEETING_END_REASON.INACTIVE || changedSelf.joinedWith.reason === MEETING_END_REASON.MEDIA_RELEASED);\n\n\n/**\n * @param {Object} check\n * @returns {Boolean}\n */\nSelfUtils.isLocusGuestUnadmitted = (check) => check && check.guest && check.state === _IDLE_;\n\n/**\n * @param {Object} check\n * @returns {Boolean}\n */\nSelfUtils.isLocusGuestAdmitted = (check) => check && check.guest && check.state === _JOINED_;\n\n/**\n * @param {Object} self\n * @returns {Boolean}\n * @throws {Error} when self is undefined\n */\nSelfUtils.isUnadmittedGuest = (self) => {\n  if (!self) {\n    throw new ParameterError('self must be defined to determine if self is unadmitted as guest.');\n  }\n\n  return SelfUtils.isLocusGuestUnadmitted(self);\n};\n\nSelfUtils.moderatorChanged = (oldSelf, changedSelf) => {\n  if (!oldSelf) {\n    return true;\n  }\n  if (!changedSelf) {\n    throw new ParameterError('New self must be defined to determine if self transitioned moderator status.');\n  }\n\n  return oldSelf.moderator !== changedSelf.moderator;\n};\n\n/**\n * @param {Object} oldSelf\n * @param {Object} changedSelf\n * @returns {Boolean}\n * @throws {Error} if changed self was undefined\n */\nSelfUtils.isAdmittedGuest = (oldSelf, changedSelf) => {\n  if (!oldSelf) {\n    // if there was no previous locus, it couldn't have been admitted yet\n    return false;\n  }\n  if (!changedSelf) {\n    throw new ParameterError('New self must be defined to determine if self transitioned to admitted as guest.');\n  }\n\n  return SelfUtils.isLocusGuestUnadmitted(oldSelf) && SelfUtils.isLocusGuestAdmitted(changedSelf);\n};\n\nSelfUtils.mutedByOthers = (oldSelf = {}, changedSelf) => {\n  if (!changedSelf) {\n    throw new ParameterError('New self must be defined to determine if self was muted by others.');\n  }\n\n  return changedSelf.muted && (oldSelf.lastModified !== changedSelf.lastModified || oldSelf.modifiedBy !== changedSelf.modifiedBy);\n};\n\n/**\n * extract the sipUrl from the partner\n * @param {Object} partner\n * @param {Object} info\n * @returns {Object}\n */\n\nSelfUtils.getSipUrl = (partner, type, sipUri) => {\n  // For webex meeting the sipUrl gets updated in info parser\n  if (partner && type === _CALL_) {\n    return {sipUri: partner.person.sipUrl || partner.person.emailAddress || partner.person.email};\n  }\n\n  return {sipUri};\n};\n\n\nexport default SelfUtils;\n\n"]}