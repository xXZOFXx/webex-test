{"version":3,"sources":["util.js"],"names":["MeetingUtil","parseLocusJoin","response","parsed","locus","body","mediaConnections","locusUrl","url","locusId","split","pop","selfId","self","id","forEach","mediaConnection","mediaId","remoteUpdateAudioVideo","audioMuted","videoMuted","meeting","reject","ParameterError","localMedias","Media","generateLocalMedias","Metrics","postEvent","event","eventType","MEDIA_REQUEST","meetingRequest","remoteAudioVideoToggle","deviceUrl","correlationId","then","MEDIA_RESPONSE","locusInfo","onFullLocus","checkShare","wirelessShare","isSharing","stopShare","resolve","hasOwner","info","owner","isOwnerSelf","isPinOrGuest","err","errorCode","INTENT_TO_JOIN","joinMeeting","options","LOCAL_JOIN_REQUEST","sipUri","roapMessage","resourceId","moderator","pin","moveToResource","res","LOCUS_JOIN_RESPONSE","data","trigger","LOCI_UPDATE","trackingId","headers","trackingid","cleanUp","statsAnalyzer","stopAnalyzer","closeLocalStream","closeLocalShare","closeRemoteStream","closePeerConnections","unsetLocalVideoTrack","unsetLocalShareTrack","unsetRemoteStream","unsetPeerConnections","cleanMQAInterval","roap","stop","roapSeq","leaveMeeting","defaultOptions","leaveOptions","moveMeeting","catch","LoggerProxy","logger","error","declineMeeting","reason","isGuestUnjoined","parsedLocus","guest","state","_JOINED_","joinMeetingOptions","setCorrelationId","PIN_COLLECTED","setLocus","meetingInfo","PIN_PROMPT","IntentToJoinError","JoinMeetingError","updateTransceiver","meetingOptions","type","sendTrack","receiveTrack","track","transceiver","peerConnection","previousMediaDirection","undefined","meetingId","remoteQualityLevel","mediaProperties","sendRoapMediaRequest","sdp","e","sender","replaceTrack","validateOptions","sendVideo","sendAudio","sendShare","localStream","localShare","getTrack","videoTrack","audioTrack","stream","audioTracks","videoTracks","getAudioTracks","getVideoTracks","length","getModeratorFromLocusInfo","getPolicyFromLocusInfo","policy","canUserLock","joined","LOCK_CONTROL_LOCK","LOCK_STATUS_UNLOCKED","canUserUnlock","LOCK_CONTROL_UNLOCK","LOCK_STATUS_LOCKED","canUserRecord","RECORDING_CONTROL_START","canUserPause","RECORDING_CONTROL_PAUSE","canUserResume","RECORDING_CONTROL_RESUME","canUserStop","RECORDING_CONTROL_STOP","startRecording","request","recordMeeting","recording","paused","PermissionError","pauseRecording","resumeRecording","stopRecording","lockMeeting","actions","canLock","lock","unlockMeeting","canUnlock","startInternalStats","internalStats","useConfig","senders","correlate","history","onEvent","kind","stat","Trigger","file","function","EVENT_TRIGGERS","MEETING_MEDIA_LOCAL_STARTED","mediaType","AUDIO","SENDING_MEDIA_START","SENDING_MEDIA_STOP","onData","VIDEO","SHARE","SENDING_SHARE_START","SENDING_SHARE_STOP","receivers","MEETING_MEDIA_REMOTE_STARTED","RECEIVING_MEDIA_START","RECEIVING_MEDIA_STOP","StatsUtil","generateOptions","STATS","CONFIG","config","WebRTCStats","attrs"],"mappings":"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","file":"util.js","sourcesContent":["import {isEmpty} from 'lodash';\n\nimport StatsUtil from '../stats/util';\nimport Metrics from '../metrics';\nimport {eventType, trigger, mediaType} from '../metrics/config';\nimport Media from '../media';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport WebRTCStats from '../stats/index';\nimport {\n  INTENT_TO_JOIN,\n  _JOINED_,\n  STATS,\n  EVENT_TRIGGERS\n} from '../constants';\nimport Trigger from '../common/events/trigger-proxy';\nimport IntentToJoinError from '../common/errors/intent-to-join';\nimport JoinMeetingError from '../common/errors/join-meeting';\nimport ParameterError from '../common/errors/parameter';\nimport PermissionError from '../common/errors/permission';\n\nconst MeetingUtil = {};\n\nMeetingUtil.parseLocusJoin = (response) => {\n  const parsed = {};\n\n  // First todo: add check for existance\n  parsed.locus = response.body.locus;\n  parsed.mediaConnections = response.body.mediaConnections;\n  parsed.locusUrl = parsed.locus.url;\n  parsed.locusId = parsed.locus.url.split('/').pop();\n  parsed.selfId = parsed.locus.self.id;\n\n  // we need mediaId before making roap calls\n  parsed.mediaConnections.forEach((mediaConnection) => {\n    if (mediaConnection.mediaId) {\n      parsed.mediaId = mediaConnection.mediaId;\n    }\n  });\n\n  return parsed;\n};\n\nMeetingUtil.remoteUpdateAudioVideo = (audioMuted, videoMuted, meeting) => {\n  if (!meeting) {\n    return Promise.reject(new ParameterError('You need a meeting object.'));\n  }\n  const localMedias = Media.generateLocalMedias(meeting.mediaId, audioMuted, videoMuted);\n\n  if (isEmpty(localMedias)) {\n    return Promise.reject(new ParameterError('You need a media id on the meeting to change remote audio.'));\n  }\n\n  Metrics.postEvent({event: eventType.MEDIA_REQUEST, meeting});\n\n  return meeting.meetingRequest.remoteAudioVideoToggle({\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    localMedias,\n    deviceUrl: meeting.deviceUrl,\n    correlationId: meeting.correlationId\n  }).then((response) => {\n    Metrics.postEvent({event: eventType.MEDIA_RESPONSE, meeting});\n    meeting.locusInfo.onFullLocus(response.body.locus);\n  });\n};\n\nMeetingUtil.checkShare = (meeting) => {\n  if ((meeting.wirelessShare && meeting.isSharing) || meeting.isSharing) {\n    return meeting.stopShare();\n  }\n\n  return Promise.resolve();\n};\n\nMeetingUtil.hasOwner = (info) => info && info.owner;\n\nMeetingUtil.isOwnerSelf = (owner, selfId) => owner === selfId;\n\nMeetingUtil.isPinOrGuest = (err) => {\n  if (err && err.body && err.body.errorCode === INTENT_TO_JOIN) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.joinMeeting = (meeting, options) => {\n  if (!meeting) {\n    return Promise.reject(new ParameterError('You need a meeting object.'));\n  }\n\n  Metrics.postEvent({event: eventType.LOCAL_JOIN_REQUEST, meeting});\n\n  // eslint-disable-next-line no-warning-comments\n  // TODO: check if the meeting is in JOINING state\n  // if Joining state termintate the request as user might click multiple times\n  return meeting.meetingRequest\n    .joinMeeting({\n      sipUri: meeting.sipUri,\n      deviceUrl: meeting.deviceUrl,\n      locusUrl: meeting.locusUrl,\n      correlationId: meeting.id,\n      roapMessage: options.roapMessage,\n      resourceId: options.resourceId || null,\n      moderator: options.moderator,\n      pin: options.pin,\n      moveToResource: options.moveToResource\n    })\n    .then((res) => {\n      Metrics.postEvent({\n        event: eventType.LOCUS_JOIN_RESPONSE,\n        meeting,\n        data: {\n          trigger: trigger.LOCI_UPDATE,\n          locus: res.body.locus,\n          trackingId: res.headers.trackingid\n        }\n      });\n\n      return MeetingUtil.parseLocusJoin(res);\n    });\n};\n\nMeetingUtil.cleanUp = (meeting) => {\n  // make sure we send last metrics before we close the peerconnection\n  if (meeting.statsAnalyzer) meeting.statsAnalyzer.stopAnalyzer();\n\n  return meeting.closeLocalStream()\n    .then(() => meeting.closeLocalShare())\n    .then(() => meeting.closeRemoteStream())\n    .then(() => meeting.closePeerConnections())\n    .then(() => {\n      meeting.unsetLocalVideoTrack();\n      meeting.unsetLocalShareTrack();\n      meeting.unsetRemoteStream();\n      meeting.unsetPeerConnections();\n      meeting.cleanMQAInterval();\n    })\n    .then(() => meeting.roap.stop(meeting.correlationId, meeting.roapSeq));\n};\n\n// by default will leave on meeting's resourceId\n// if you explicity want it not to leave on resource id, pass\n// {resourceId: null}\n// TODO: chris, you can modify this however you want\nMeetingUtil.leaveMeeting = (meeting, options = {}) => {\n  const defaultOptions = {\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    correlationId: meeting.correlationId,\n    resourceId: meeting.resourceId,\n    deviceUrl: meeting.deviceUrl\n  };\n\n  const leaveOptions = {...defaultOptions, ...options};\n\n  return meeting.meetingRequest\n    .leaveMeeting(leaveOptions)\n    .then((response) => {\n      if (response && response.body && response.body.locus) { // && !options.moveMeeting) {\n        meeting.locusInfo.onFullLocus(response.body.locus);\n      }\n\n      return Promise.resolve();\n    })\n    .then(() => {\n      if (options.moveMeeting) {\n        return Promise.resolve();\n      }\n\n      return MeetingUtil.cleanUp(meeting);\n    })\n    .catch((err) => {\n      LoggerProxy.logger.error(\n        `Meeting:util#leaveMeeting --> An error occured while trying to leave meeting with an id of ${\n          meeting.id\n        }, error: ${err}`\n      );\n\n      return Promise.reject(err);\n    });\n};\nMeetingUtil.declineMeeting = (meeting, reason) =>\n  meeting.meetingRequest.declineMeeting({\n    locusUrl: meeting.locusUrl,\n    deviceUrl: meeting.deviceUrl,\n    reason\n  });\n\nMeetingUtil.isGuestUnjoined = (locusInfo) =>\n  locusInfo.parsedLocus && locusInfo.parsedLocus.self && locusInfo.parsedLocus.self.guest && locusInfo.parsedLocus.self.state !== _JOINED_;\n\nMeetingUtil.joinMeetingOptions = (meeting, options = {}) => {\n  meeting.resourceId = meeting.resourceId || options.resourceId;\n  meeting.setCorrelationId(meeting.id);\n\n  if (options.pin) {\n    Metrics.postEvent({\n      event: eventType.PIN_COLLECTED,\n      meeting\n    });\n  }\n\n  // normal join meeting, scenario A, D\n  return MeetingUtil.joinMeeting(meeting, options)\n    .then((response) => {\n      meeting.setLocus(response);\n\n      return Promise.resolve(response);\n    })\n    .catch((err) => {\n      // joining a claimed PMR that is not my own, scenario B\n      if (MeetingUtil.isPinOrGuest(err)) {\n        if (MeetingUtil.hasOwner(meeting.meetingInfo)) {\n          return MeetingUtil.joinMeeting(meeting, options).then((response) => {\n            meeting.setLocus(response);\n\n            return Promise.resolve();\n          });\n        }\n\n        Metrics.postEvent({\n          event: eventType.PIN_PROMPT,\n          meeting\n        });\n\n        // request host pin or non host for unclaimed PMR, start of Scenario C\n        // see https://sqbu-github.cisco.com/WebExSquared/locus/wiki/Locus-Lobby-and--IVR-Feature\n        return Promise.reject(new IntentToJoinError('Error Joining Meeting', err));\n      }\n      LoggerProxy.logger.error('Meeting:util#joinMeetingOptions --> Error joining the call, ', err);\n\n      return Promise.reject(new JoinMeetingError(options, 'Error Joining Meeting', err));\n    });\n};\n\nMeetingUtil.updateTransceiver = (options, meetingOptions) => {\n  const {\n    type,\n    sendTrack,\n    receiveTrack,\n    track,\n    transceiver,\n    peerConnection,\n    previousMediaDirection\n  } = options;\n\n  if ((sendTrack !== undefined && sendTrack !== previousMediaDirection.sendTrack) ||\n  (receiveTrack !== undefined && receiveTrack !== previousMediaDirection.receiveTrack)) {\n    return Media.updateTransceiver({\n      meetingId: meetingOptions.meeting.id,\n      remoteQualityLevel: meetingOptions.mediaProperties.remoteQualityLevel\n    }, peerConnection, transceiver,\n    {\n      track,\n      type,\n      receiveTrack,\n      sendTrack\n    })\n      .then(() => meetingOptions.meeting.roap\n        .sendRoapMediaRequest({\n          sdp: meetingOptions.mediaProperties.peerConnection.sdp,\n          roapSeq: meetingOptions.roapSeq,\n          meeting: meetingOptions.meeting // or can pass meeting ID\n        }))\n      .catch((e) => {\n        LoggerProxy.logger.error(`Meeting:util#updateTransceiver --> Error updating the ${type} streams with error: ${e}`);\n      });\n  } if (track) {\n    transceiver.sender.replaceTrack(track);\n\n    return Promise.resolve();\n  }\n\n  return Promise.reject(new ParameterError('update Failed: please pass valid parameter'));\n};\n\nMeetingUtil.validateOptions = (options) => {\n  const {\n    sendVideo, sendAudio, sendShare, localStream, localShare\n  } = options;\n\n  if (sendVideo && !MeetingUtil.getTrack(localStream).videoTrack) {\n    return Promise.reject(new ParameterError('please pass valid video streams'));\n  }\n\n  if (sendAudio && !MeetingUtil.getTrack(localStream).audioTrack) {\n    return Promise.reject(new ParameterError('please pass valid audio streams'));\n  }\n\n  if (sendShare && !MeetingUtil.getTrack(localShare).videoTrack) {\n    return Promise.reject(new ParameterError('please pass valid share streams'));\n  }\n\n  return Promise.resolve();\n};\n\nMeetingUtil.getTrack = (stream) => {\n  let audioTrack = null;\n  let videoTrack = null;\n  let audioTracks = null;\n  let videoTracks = null;\n\n  if (!stream) {\n    return {audioTrack: null, videoTrack: null};\n  }\n  if (stream.getAudioTracks) {\n    audioTracks = stream.getAudioTracks();\n  }\n  if (stream.getVideoTracks) {\n    videoTracks = stream.getVideoTracks();\n  }\n\n  if (audioTracks && audioTracks.length > 0) {\n    [audioTrack] = audioTracks;\n  }\n\n  if (videoTracks && videoTracks.length > 0) {\n    [videoTrack] = videoTracks;\n  }\n\n  return {audioTrack, videoTrack};\n};\n\nMeetingUtil.getModeratorFromLocusInfo = (locusInfo) =>\n  locusInfo &&\n  locusInfo.parsedLocus &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info.moderator;\n\nMeetingUtil.getPolicyFromLocusInfo = (locusInfo) =>\n  locusInfo &&\n  locusInfo.parsedLocus &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info &&\n  locusInfo.parsedLocus.info.policy;\n\nMeetingUtil.canUserLock = (moderator, joined) => {\n  if (moderator.LOCK_CONTROL_LOCK && joined.LOCK_STATUS_UNLOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserUnlock = (moderator, joined) => {\n  if (moderator.LOCK_CONTROL_UNLOCK && joined.LOCK_STATUS_LOCKED) {\n    return true;\n  }\n\n  return false;\n};\n\nMeetingUtil.canUserRecord = (moderator) => moderator.RECORDING_CONTROL_START;\n\nMeetingUtil.canUserPause = (moderator) => moderator.RECORDING_CONTROL_PAUSE;\n\nMeetingUtil.canUserResume = (moderator) => moderator.RECORDING_CONTROL_RESUME;\n\nMeetingUtil.canUserStop = (moderator) => moderator.RECORDING_CONTROL_STOP;\n\nMeetingUtil.startRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserRecord(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Start recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.pauseRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserPause(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: true});\n  }\n\n  return Promise.reject(new PermissionError('Pause recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.resumeRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserResume(moderator)) {\n    return request.recordMeeting({locusUrl, recording: true, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Resume recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.stopRecording = (request, locusUrl, locusInfo) => {\n  const moderator = MeetingUtil.getModeratorFromLocusInfo(locusInfo);\n\n  if (moderator && MeetingUtil.canUserStop(moderator)) {\n    return request.recordMeeting({locusUrl, recording: false, paused: false});\n  }\n\n  return Promise.reject(new PermissionError('Stop recording not allowed, due to moderator property.'));\n};\n\nMeetingUtil.lockMeeting = (actions, request, locusUrl) => {\n  if (actions && actions.canLock) {\n    return request.lockMeeting({locusUrl, lock: true});\n  }\n\n  return Promise.reject(new PermissionError('Lock not allowed, due to joined property.'));\n};\n\nMeetingUtil.unlockMeeting = (actions, request, locusUrl) => {\n  if (actions && actions.canUnlock) {\n    return request.lockMeeting({locusUrl, lock: false});\n  }\n\n  return Promise.reject(new PermissionError('Unlock not allowed, due to joined property.'));\n};\n\nMeetingUtil.startInternalStats = (meeting) => {\n  if (!meeting.internalStats) {\n    const options = {\n      useConfig: true,\n      senders: [\n        {\n          id: 'mainAudio',\n          correlate: 'audio',\n          history: true,\n          onEvent: (event) => {\n            // TODO: we don't need checks like this since it comes from the transceiver\n            // refactor event linkage to use callbacks instead of events\n            if (event.kind === 'audio' && event.stat === 'bytesSent') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED,\n                {\n                  type: mediaType.AUDIO\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainVideo',\n          correlate: 'video',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'video' && event.stat === 'bytesSent') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED,\n                {\n                  type: mediaType.VIDEO\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainShare',\n          correlate: 'video',\n          onEvent: (event) => {\n            if (event.kind === 'share' && event.stat === 'bytesSent') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED,\n                {\n                  type: mediaType.SHARE\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.SENDING_SHARE_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.SHARE\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesSent') {\n              Metrics.postEvent({\n                event: eventType.SENDING_SHARE_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.SHARE\n                }\n              });\n            }\n          },\n          onData: () => {}\n        }\n      ],\n      receivers: [\n        {\n          id: 'mainAudio',\n          correlate: 'audio',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'audio' && event.stat === 'bytesReceived') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED,\n                {\n                  type: mediaType.AUDIO\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.AUDIO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainVideo',\n          correlate: 'video',\n          history: true,\n          onEvent: (event) => {\n            if (event.kind === 'video' && event.stat === 'bytesReceived') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED,\n                {\n                  type: mediaType.VIDEO\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.VIDEO\n                }\n              });\n            }\n          },\n          onData: () => {}\n        },\n        {\n          id: 'mainShare',\n          correlate: 'video',\n          onEvent: (event) => {\n            if (event.kind === 'share' && event.stat === 'bytesReceived') {\n              Trigger.trigger(\n                meeting,\n                {\n                  file: 'meeting/util',\n                  function: 'startInternalStats'\n                },\n                EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED,\n                {\n                  type: mediaType.SHARE\n                }\n              );\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_START,\n                meeting,\n                data: {\n                  mediaType: mediaType.SHARE\n                }\n              });\n            }\n            else if (event.stop && event.stat === 'bytesReceived') {\n              Metrics.postEvent({\n                event: eventType.RECEIVING_MEDIA_STOP,\n                meeting,\n                data: {\n                  mediaType: mediaType.SHARE\n                }\n              });\n            }\n          },\n          onData: () => {}\n        }\n      ]\n    };\n\n    StatsUtil.generateOptions(options, STATS.CONFIG, meeting);\n\n    options.config = STATS.CONFIG;\n\n    // pass the attrs and options for the webex instance\n    meeting.internalStats = new WebRTCStats(meeting.attrs, meeting.options, options);\n  }\n\n  return meeting.internalStats;\n};\n\nexport default MeetingUtil;\n"]}