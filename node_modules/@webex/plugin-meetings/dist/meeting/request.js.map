{"version":3,"sources":["request.js"],"names":["MeetingRequest","options","sipUri","deviceUrl","locusUrl","resourceId","correlationId","ensureConversation","moderator","pin","moveToResource","roapMessage","LoggerProxy","logger","info","url","body","device","deviceType","config","meetings","usingResource","moveMediaToResource","respOnlySdp","allowMultiDevice","supportsNativeLobby","undefined","PARTICIPANT","webex","internal","services","waitForCatalog","get","LOCI","CALL","invitee","address","error","concat","ALTERNATE_REDIRECT_TRUE","callPreferences","requestedMedia","_SLIDES_","localMedias","request","method","HTTP_VERBS","POST","uri","desync","syncUrl","split","LOCUS","SYNCDEBUG","GET","catch","err","reject","selfId","LEAVE","PUT","ALERT","id","CONTROLS","record","recording","paused","PATCH","lock","locked","DECLINE","reason","MEDIA","floorReq","disposition","FLOOR_ACTION","GRANTED","beneficiary","personUrl","devices","requester","floor","resourceUrl","tones","SEND_DTMF_ENDPOINT","dtmf","uuid","v4","layoutType","layout","type","StatelessWebexPlugin"],"mappings":"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","file":"request.js","sourcesContent":["import uuid from 'uuid';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  ALERT,\n  ALTERNATE_REDIRECT_TRUE,\n  CALL,\n  CONTROLS,\n  DECLINE,\n  FLOOR_ACTION,\n  HTTP_VERBS,\n  LEAVE,\n  LOCI,\n  LOCUS,\n  MEDIA,\n  PARTICIPANT,\n  SEND_DTMF_ENDPOINT,\n  _SLIDES_\n} from '../constants';\n\n/**\n * @class MeetingRequest\n */\nexport default class MeetingRequest extends StatelessWebexPlugin {\n  /**\n   * Make a network request to join a meeting\n   * @param {Object} options\n   * @param {String} options.sipUri\n   * @param {String} options.deviceUrl\n   * @param {String} options.locusUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @param {boolean} options.ensureConversation\n   * @param {boolean} options.moderator\n   * @param {boolean} options.pin\n   * @param {boolean} options.moveToResource\n   * @param {Object} options.roapMessage\n   * @returns {Promise}\n   */\n  async joinMeeting(options) {\n    const {\n      sipUri, deviceUrl, locusUrl, resourceId, correlationId, ensureConversation, moderator, pin, moveToResource, roapMessage\n    } = options;\n\n    LoggerProxy.logger.info(\n      'Meeting:request#joinMeeting --> Joining a meeting',\n      correlationId\n    );\n\n    let url = '';\n\n    const body = {\n      device: {\n        url: deviceUrl,\n        deviceType: this.config.meetings.deviceType\n      },\n      usingResource: resourceId || null,\n      moveMediaToResource: resourceId && moveToResource || false,\n      correlationId,\n      respOnlySdp: true,\n      allowMultiDevice: true,\n      ensureConversation: ensureConversation || false,\n      supportsNativeLobby: 1\n    };\n\n    if (moderator !== undefined) {\n      body.moderator = moderator;\n    }\n\n    if (pin !== undefined) {\n      body.pin = pin;\n    }\n\n    if (locusUrl) {\n      url = `${locusUrl}/${PARTICIPANT}`;\n    }\n    else if (sipUri) {\n      try {\n        await this.webex.internal.services.waitForCatalog('postauth');\n        url = `${this.webex.internal.services.get('locus')}/${LOCI}/${CALL}`;\n        body.invitee = {\n          address: sipUri\n        };\n      }\n      catch (e) {\n        LoggerProxy.logger.error(`Meeting:request#joinMeeting --> ${e}`);\n        throw (e);\n      }\n    }\n\n    // TODO: -- this will be resolved in SDK request\n    url = url.concat(`?${ALTERNATE_REDIRECT_TRUE}`);\n\n    if (resourceId === sipUri) {\n      body.callPreferences = {\n        requestedMedia: [_SLIDES_]\n      };\n    }\n\n    if (roapMessage) {\n      body.localMedias = roapMessage.localMedias;\n    }\n\n    return this.webex.request({\n      method: HTTP_VERBS.POST,\n      uri: url,\n      body\n    });\n  }\n\n  /**\n   * Syns the missed delta event\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.syncUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  syncMeeting(options) {\n    /* eslint-disable no-else-return */\n    const {desync} = options;\n    let {syncUrl} = options;\n\n    /* istanbul ignore else */\n    if (desync) {\n      // check for existing URL parameters\n      syncUrl = syncUrl.concat(syncUrl.split('?')[1] ? '&' : '?').concat(`${LOCUS.SYNCDEBUG}=${desync}`);\n    }\n\n    return this.request({\n      method: HTTP_VERBS.GET,\n      uri: syncUrl\n    }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch((err) => {\n        LoggerProxy.logger.error(`Meeting:request#syncMeeting --> Error syncing meeting, error ${err}`);\n\n        return err;\n      });\n  }\n\n  /**\n   * Request to get the complete locus object\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.locusUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  getFullLocus(options) {\n    let {locusUrl} = options;\n    const {desync} = options;\n\n    if (locusUrl) {\n      if (desync) {\n        locusUrl += `?${LOCUS.SYNCDEBUG}=${desync}`;\n      }\n\n      return this.request({\n        method: HTTP_VERBS.GET,\n        uri: locusUrl\n      }).catch((err) => {\n        LoggerProxy.logger.error(`Meeting:request#getFullLocus --> Error getting full locus, error ${err}`);\n\n        return err;\n      });\n    }\n\n    return Promise.reject();\n  }\n\n  /**\n   * Make a network request to leave a meeting\n   * @param {Object} options\n   * @param {Url} options.locusUrl\n   * @param {String} options.selfId\n   * @param {Url} options.deviceUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  leaveMeeting({\n    locusUrl, selfId, deviceUrl: url, resourceId, correlationId\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#leaveMeeting --> Leaving a meeting',\n      correlationId\n    );\n\n    const uri = `${locusUrl}/${PARTICIPANT}/${selfId}/${LEAVE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url\n      },\n      usingResource: resourceId || null,\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  acknowledgeMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${ALERT}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      correlationId: options.id\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  recordMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      record: {\n        recording: options.recording,\n        paused: options.paused\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  lockMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      lock: {\n        locked: options.lock\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to decline a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.reason\n   * @returns {Promise}\n   */\n  declineMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${DECLINE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      reason: options.reason\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Toggle remote audio and/or video\n   * @param {Object} options options for toggling\n   * @param {String} options.selfId Locus self id??\n   * @param {String} options.locusUrl Locus url\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.localMedias local sdps\n   * @returns {Promise}\n   */\n  remoteAudioVideoToggle(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${MEDIA}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId,\n      respOnlySdp: true,\n      localMedias: options.localMedias\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * change the content floor grant\n   * @param {Object} options options for floor grant\n   * @param {String} options.disposition floor action (granted/released)\n   * @param {String} options.personUrl personUrl who is requesting floor\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.uri floor grant uri\n   * @returns {Promise}\n   */\n  changeMeetingFloor(options) {\n    let floorReq = {disposition: options.disposition};\n\n    /* istanbul ignore else */\n    if (options.disposition === FLOOR_ACTION.GRANTED) {\n      floorReq = {\n        beneficiary: {\n          url: options.personUrl,\n          devices: [\n            {\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl\n            }\n          ]\n        },\n        disposition: options.disposition,\n        requester: {\n          url: options.personUrl\n        }\n      };\n    }\n\n    return this.request({\n      uri: options.uri,\n      method: HTTP_VERBS.PUT,\n      body: {\n        floor: floorReq,\n        resourceUrl: options.resourceUrl\n      }\n    });\n  }\n\n  /**\n   * Sends a request to the DTMF endpoint to send tones\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   */\n  sendDTMF({locusUrl, deviceUrl, tones}) {\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: `${locusUrl}/${SEND_DTMF_ENDPOINT}`,\n      body: {\n        deviceUrl,\n        dtmf: {\n          correlationId: uuid.v4(),\n          tones\n        }\n      }\n    });\n  }\n\n  /**\n   * Sends a request to the controls endpoint to set the video layout\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.layoutType a layout type that should be available in meeting constants LAYOUT_TYPES\n   * @returns {Promise}\n   */\n  changeVideoLayout({locusUrl, deviceUrl, layoutType}) {\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri: `${locusUrl}/${CONTROLS}`,\n      body: {\n        layout: {\n          deviceUrl,\n          type: layoutType\n        }\n      }\n    });\n  }\n}\n"]}