{"version":3,"sources":["request.shim.js"],"names":["_request","options","resolve","params","response","bindProgressEvents","setAuth","setCookies","setDefaults","setResponseType","setContentType","setPayload","setQs","logger","debug","method","uri","x","error","warn","statusCode","processResponseJson","headers","url","body","onprogress","download","emit","bind","catch","o","includes","toUpperCase","xhr","XMLHttpRequest","upload","auth","bearer","authorization","user","username","pass","password","token","btoa","jar","withCredentials","defs","cors","timeout","responseType","Blob","ArrayBuffer","json","qs","stringify","ensureBlob","file","ret","type","filename","name","append","form","key","value","v","formData","reduce","fd","FormData","JSON","parse","e"],"mappings":"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","file":"request.shim.js","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env browser */\n\n// Note: several code paths are ignored in this file. As far as I can tell, any\n// error conditions that would provoke those paths are otherwise prevented and\n// reported.\n\nimport {defaults, isArray, pick} from 'lodash';\nimport qs from 'qs';\n\nimport xhr from '../lib/xhr';\nimport {detectSync} from '../lib/detect';\n\n/**\n * @name request\n * @param {Object} options\n * @returns {Promise}\n */\nexport default function _request(options) {\n  return new Promise((resolve) => {\n    const params = pick(options, 'method', 'uri', 'withCredentials', 'headers', 'timeout', 'responseType');\n\n    // Set `response` to `true` to approximate an `HttpResponse` object\n    params.response = true;\n\n    bindProgressEvents(params, options);\n    setAuth(params, options);\n    setCookies(params, options);\n    setDefaults(params, options);\n    setResponseType(params, options);\n    setContentType(params, options);\n    setPayload(params, options);\n    setQs(params, options);\n\n    options.logger.debug(`start http ${options.method ? options.method : 'request'} to ${options.uri}`);\n\n    const x = xhr(params, (error, response) => {\n      /* istanbul ignore next */\n      if (error) {\n        options.logger.warn(error);\n      }\n\n      /* istanbul ignore else */\n      if (response) {\n        if (response.statusCode >= 400) {\n          options.logger.warn(`http ${options.method ? options.method : 'request'} to ${options.uri} result: ${response.statusCode}`);\n        }\n        else {\n          options.logger.debug(`http ${options.method ? options.method : 'request'} to ${options.uri} result: ${response.statusCode}`);\n        }\n        response.options = options;\n        processResponseJson(response, params);\n        resolve(response);\n      }\n      else {\n        resolve({\n          statusCode: 0,\n          options,\n          headers: options.headers,\n          method: options.method,\n          url: options.uri,\n          body: error\n        });\n      }\n    });\n\n    x.onprogress = options.download.emit.bind(options.download, 'progress');\n  })\n    .catch((error) => {\n      options.logger.warn(error);\n\n      /* eslint arrow-body-style: [0] */\n      /* istanbul ignore next */\n      return {\n        statusCode: 0,\n        options,\n        headers: options.headers,\n        method: options.method,\n        url: options.uri,\n        body: error\n      };\n    });\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function bindProgressEvents(params, o) {\n    if (params.method && ['PATCH', 'POST', 'PUT'].includes(params.method.toUpperCase())) {\n      params.xhr = new XMLHttpRequest();\n      params.xhr.upload.onprogress = o.upload.emit.bind(o.upload, 'progress');\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setAuth(params, o) {\n    if (o.auth) {\n      if (o.auth.bearer) {\n        params.headers.authorization = `Bearer ${o.auth.bearer}`;\n      }\n      else {\n        const user = o.auth.user || o.auth.username;\n        const pass = o.auth.pass || o.auth.password;\n\n        const token = btoa(`${user}:${pass}`);\n\n        params.headers.authorization = `Basic ${token}`;\n      }\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setCookies(params, o) {\n    if (o.jar) {\n      params.withCredentials = true;\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setDefaults(params, o) {\n    const defs = {\n      cors: true,\n      // raynos/xhr defaults withCredentials to true if cors is true, so we need\n      // to make it explicitly false by default\n      withCredentials: false,\n      timeout: 0\n    };\n\n    defaults(params, pick(o, Object.keys(defs)), defs);\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setResponseType(params, o) {\n    if (o.responseType === 'buffer') {\n      params.responseType = 'arraybuffer';\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setContentType(params, o) {\n    if (o.body instanceof Blob || o.body instanceof ArrayBuffer) {\n      o.json = params.json = false;\n      params.headers['content-type'] = params.headers['content-type'] || detectSync(o.body);\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setQs(params, o) {\n    if (o.qs) {\n      params.uri += `?${qs.stringify(o.qs)}`;\n    }\n  }\n\n  /**\n   * Converts arraybuffers to blobs before uploading them\n   * @param {mixed} file\n   * @private\n   * @returns {mixed}\n   */\n  function ensureBlob(file) {\n    if (file instanceof ArrayBuffer) {\n      const ret = file.type ? new Blob([file], {type: file.type}) : new Blob([file]);\n\n      ret.filename = file.filename || file.name || 'untitled';\n\n      return ret;\n    }\n\n    return file;\n  }\n\n  /**\n   * Appends an item to a form\n   * @param {FormData} form\n   * @param {string} key\n   * @param {mixed} value\n   * @returns {undefined}\n   */\n  function append(form, key, value) {\n    if (isArray(value)) {\n      for (const v of value) {\n        append(form, key, v);\n      }\n\n      return;\n    }\n\n    value = ensureBlob(value);\n    if (value.name) {\n      value.filename = value.name;\n      form.append(key, value, value.name);\n    }\n    else {\n      form.append(key, value);\n    }\n  }\n\n  /**\n   * @param {Object} params\n   * @param {Object} o\n   * @private\n   * @returns {undefined}\n   */\n  function setPayload(params, o) {\n    if ((!('json' in o) || o.json === true) && o.body) {\n      params.json = o.body;\n    }\n    else if (o.form) {\n      params.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      params.body = qs.stringify(o.form);\n      Reflect.deleteProperty(params, 'json');\n    }\n    else if (o.formData) {\n      params.body = Object.keys(o.formData).reduce((fd, key) => {\n        const value = o.formData[key];\n\n        append(fd, key, value);\n\n        return fd;\n      }, new FormData());\n    }\n    else {\n      params.body = o.body;\n      Reflect.deleteProperty(params, 'json');\n    }\n  }\n\n  /**\n   * @param {Object} response\n   * @param {Object} params\n   * @private\n   * @returns {undefined}\n   */\n  function processResponseJson(response, params) {\n    // If params.json is not defined, xhr won't deserialize the response\n    // so we should give it a shot just in case.\n    if (!params.json && typeof response.body !== 'object') {\n      try {\n        response.body = JSON.parse(response.body);\n      }\n      catch (e) {\n        /* eslint no-empty: [0] */\n      }\n    }\n  }\n}\n"]}